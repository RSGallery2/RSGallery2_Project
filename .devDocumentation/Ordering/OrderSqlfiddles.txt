-- http://www.sqlfiddle.com --

CREATE TABLE gallery
	(`id` int, `name` varchar(255), `parentId` int, `ordering` int)
;
	
INSERT INTO gallery
	(`id`, `parentId`, `ordering`, `name`)
VALUES
	(23, 1, 1, 'Gal 1.4'),
	(22, 0, 2, 'New instert 2'),
	(21, 0, 3, 'New insert'),
	(13, 2, 4, 'Gal 2.4'),
	(6, 1, 5, 'Gal 1.3'),
	(16, 8, 6, 'Gal 2.2.2'),
	(19, 5, 7, 'Gal 1.2.1'),
	(20, 0, 8, 'Old Insert'),
	(10, 3, 9, 'Gal 3.1'),
	(18, 5, 10, 'Gal 1.2.2'),
	(15, 8, 11, 'Gal 2.2.3'),
	(12, 3, 12, 'Gal 3.3'),
	(1, 0, 13, 'Gal 1'),
	(9, 2, 14, 'Gal 2.3'),
	(5, 1, 15, 'Gal 1.2'),
	(2, 0, 16, 'Gal2'),
	(4, 1, 17, 'Gal 1.1'),
	(17, 5, 18, 'Gal 1.2.3'),
	(14, 8, 19, 'Gal 2.2.1'),
	(8, 2, 20, 'Gal 2.2'),
	(11, 3, 21, 'Gal 3.2'),
	(7, 2, 22, 'Gal 2.1'),
	(3, 0, 23, 'Gal 3')
;

-- not working --
SELECT
  id,
  parentId,
  ordering,
  name
FROM
  gallery
ORDER BY COALESCE(parentId, id)
ORDER BY COALESCE(IF parentId !=0 , id)

  
-- Parent child ok, not sorting by order ;-) --  
  
SELECT
  a.id,
  a.parentId,
  a.ordering,
  a.name
FROM
  gallery a
LEFT JOIN `gallery` b ON a.parentId = b.id
ORDER BY
    CASE
        WHEN a.parentId = 0
        THEN a.id
        ELSE a.parent
    END,
    a.parent;  

-- parents and child ordered after ordering , childs direct after parent --
	  
SELECT
  a.id,
  a.parentId,
  a.ordering,
  a.name
FROM
  gallery a
LEFT JOIN gallery b ON a.parentId = b.id
ORDER BY
      COALESCE( b.ordering, a.ordering),
      case when a.parentId = 0 then 1 else 2 end,
      a.ordering
	  
	  
	  
