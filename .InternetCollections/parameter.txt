
Parameter in component view

Merge of config of component and menu parameters:

Model::populateState(..) ==> $this->setState('params', $app->getParams());

Htmlview::display ==> 
	$this->State = $this->get('State');
	$this->params = $state->get('params');
	
	
---------------------------------------------------

merge parameter using global parameters 

menu field (or ite field)
			<field
				name="show_name"
				type="list"
				label="COM_FOOS_FIELD_PARAMS_NAME_LABEL"
				description="COM_FOOS_FIELD_PARAMS_NAME_LABEL_DESC" >
				<option value="">JGLOBAL_USE_GLOBAL</option>
				<option value="0">JHIDE</option>
				<option value="1">JSHOW</option>
			</field>
attention: option value="" for JGLOBAL_USE_GLOBAL

in the component config use the similar field without option global


Merge: 

1) Access indirect 

$isShowName = $menu->params->get('show_name', $this->params->get('show_name','globalparamdefault'));
==> $this->params component config
2) Merge 
$actualParams = clone $this->params;
$actualParams->merge($menu->params);


---------------------------------------------------

---------------------------------------------------
if (property_exists($item, 'params'))
      {
         $registry = new JRegistry;
         $registry->loadString($item->params);
         $item->params = $registry->toArray();
      }
---------------------------------------------------

Now to answer your question, Joomla no longer uses JParameter - it uses JRegistry instead. So something like:

$jparameter = new JParameter('param1');
Should be changed to:

$jregistry= new JRegistry();
$jparameter = $jregistry->get('param1'); 

--------------------------------------------------
Get Module Parameter from template's index.php file:

$module = JModuleHelper::getModule('mod_headlineticker');
$headLineParams = new JRegistry($module->params);
$tickercount = (int) $headLineParams['count'];

------------------------------------------------

As JParameter was using JRegistry, here is a work around:

$params = new JRegistry();
$params->loadString($module->params);

$params->get('param_name');

-------------------------------------------------

A little late, but for everyone else who stumbles upon this:

Use:

json_decode($plugin->params);

------------------------------------------------


schon erledigt. ich hab mir die Daten mit: 
$moduleParams = new JRegistry($module->params); 
importiert.


